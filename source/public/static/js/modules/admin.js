// Generated by CoffeeScript 1.6.3
(function() {
  yOSON.AppCore.addModule("dataTable", (function(Sb) {
    return {
      init: function(oParams) {
        var dataUrl, json, opts;
        dataUrl = oParams.url;
        opts = {
          "bJQueryUI": false,
          "bAutoWidth": false,
          "sPaginationType": "full_numbers",
          "sDom": '<"datatable-header"fl>t<"datatable-footer"ip>',
          "oLanguage": {
            "sSearch": "Busqueda",
            "sLengthMenu": "<span>Mostrar registros por pagina</span> _MENU_",
            "sZeroRecords": "No hay resultados",
            "sInfo": "Mostrar _START_ a _END_ de _TOTAL_ registros",
            "sInfoEmpty": "Mostrar 0 a 0 de 0 records",
            "sInfoFiltered": "( _MAX_ registros en total)",
            "oPaginate": {
              "sLast": "Última",
              "sFirst": "Primera",
              "sNext": ">",
              "sPrevious": "<"
            }
          },
          "bServerSide": true,
          "sAjaxSource": dataUrl
        };
        json = $.extend(opts, yOSON.datable[oParams.table]);
        return window.instDataTable = $('#datatable').dataTable(json);
      }
    };
  }), ["libs/plugins/jqDataTable.js", "data/datatable.js"]);

  yOSON.AppCore.addModule("actionDel", (function(Sb) {
    var bindEvents, catchDom, dom, st;
    st = {
      del: ".ico-delete",
      table: "#datatable"
    };
    dom = {};
    catchDom = function() {
      return dom.table = $(st.table);
    };
    bindEvents = function(qus) {
      var $this, answer, id, url;
      $this = null;
      url = "";
      id = "";
      table="";
      answer = typeof qus !== "undefined" ? qus : "¿Esta seguro que desea eliminar el item seleccionado?";
      return dom.table.on("click", st.del, function(e) {
        var hash, parent;
        e.preventDefault();
        $this = $(this);
        if (confirm(answer)) {
          url = $this.attr("href");
          id = $this.attr("data-id");
          table= $this.attr("data-table");
          parent = $this.parents("tr");
          hash = utils.loader(parent, true, 1);
          return $.ajax({
            "url": url,
            "data": {
              "id": id,
              "table":table
            },
            "dataType": "JSON",
            "success": function(json) {
              utils.loader($("#" + hash), false, 1);
              if (json.msj === "ok") {
                return instDataTable.fnDraw();
              }
            }
          });
        }
      });
    };
    return {
      init: function(oParams) {
        catchDom();
        return bindEvents(oParams.title);
      }
    };
  }), ["libs/plugins/jqDataTable.js"]);

  yOSON.AppCore.addModule("filtersDataTable", (function(Sb) {
    var bindEvents, catchDom, dom, st;
    st = {
      filters: ".coltbl-filter",
      btnFilter: ".btnTblFilter"
    };
    dom = {};
    catchDom = function() {
      dom.filters = $(st.filters);
      return dom.btnFilter = $(st.btnFilter);
    };
    bindEvents = function() {
      var $this, dataInpt;
      $this = null;
      dataInpt = {};
      return dom.filters.each(function() {
        $this = $(this);
        if(this.type=="text"){
          $this.on("keyup", function() {
            if (typeof dataInpt[this.id] === "undefined" || dataInpt[this.id] !== this.value) {
              dataInpt[this.id] = this.value;
              return window.instDataTable.fnFilter(this.value, $(this).attr("data-column"));
            }
          });
        }else if(this.tagName.toLowerCase()=="select"){
          $this.on("change", function() {
            if (typeof dataInpt[this.id] === "undefined" || dataInpt[this.id] !== this.value) {
              dataInpt[this.id] = this.value;
              return window.instDataTable.fnFilter(this.value, $(this).attr("data-column"));
            }
          });
        }
      });
    };
    return {
      init: function(oParams) {
        catchDom();
        return bindEvents();
      }
    };
  }), ["libs/plugins/jqDataTable.js"]);

  yOSON.AppCore.addModule("datepicker", (function(Sb) {
    var bindEvents, catchDom, dom,memoize, st;
    st = {
      dateTimepicker: ".datetimepicker",
      birthdaypicker: ".birthdaypicker",
      dateIni:"#from",
      dateFin:"#to"
    };
    dom = {};
    memoize={
      init: "",
      finish: ""
    };
    catchDom = function() {
      dom.dateTimepicker = $(st.dateTimepicker);
      dom.dateIni = $(st.dateIni);
      dom.dateFin = $(st.dateFin);
      dom.birthdaypicker = $(st.birthdaypicker);
    };
    bindEvents = function() {
      dom.dateTimepicker.datetimepicker({
        dateFormat: "yy-mm-dd",
        timeFormat: "HH:mm",
        minDate: 0,
        timeText: "Tiempo",
        hourText: "Hora",
        minuteText: "Minutos",
        currentText: "Hoy",
        closeText: "Ok"
      });
      dom.birthdaypicker.datepicker({
        yearRange: "-80:c",
        maxDate: 0,
        changeMonth: true,
        changeYear: true,
        dateFormat: "yy-mm-dd"
      });
      dom.dateIni.datepicker({
        dateFormat: "yy-mm-dd",
        onClose: function(selectedDate){
          dom.dateFin.datepicker("option","minDate",selectedDate);
          dom.dateIni.val(selectedDate);
          if(selectedDate!=""&&memoize.init!=selectedDate){
            memoize.init=selectedDate;
            dom.dateIni.trigger('keyup');
          }
        }
      });
      dom.dateFin.datepicker({
        dateFormat: "yy-mm-dd",
        onClose: function(selectedDate){
          dom.dateIni.datepicker("option","maxDate",selectedDate);
          dom.dateFin.val(selectedDate);
          if(selectedDate!=""&&memoize.finish!=selectedDate){
            memoize.finish=selectedDate;
            dom.dateFin.trigger('keyup');
          }
        }
      });
    };
    return {
      init: function(oParams) {
        catchDom();
        return bindEvents();
      }
    };
  }), ["libs/plugins/jqUI.js", "libs/plugins/jqDatepicker.js", "libs/plugins/jqTimepicker.js"]);

  yOSON.AppCore.addModule("validation", (function(Sb) {
    return {
      init: function(oParams) {
        var forms;
        forms = oParams.form.split(",");
        return $.each(forms, function(index, value) {
          var prop, settings;
          settings = {};
          value = $.trim(value);
          for (prop in yOSON.require[value]) {
            settings[prop] = yOSON.require[value][prop];
          }
          return $(value).validate(settings);
        });
      }
    };
  }), ["data/require.js", "libs/plugins/jqValidate.js"]);

  yOSON.AppCore.addModule("numeric", (function(Sb) {
    var bindEvents, catchDom, dom, st;
    st = {
      inpt: ".numeric",
      dec: ".decimal",
      edad: ".inptEdad"
    };
    dom = {};
    catchDom = function() {
      dom.inpt = $(st.inpt);
      dom.dec = $(st.dec);
      return dom.edad = $(st.edad);
    };
    bindEvents = function() {
      dom.inpt.numeric({
        decimal: false,
        negative: false
      });
      dom.dec.numeric({
        negative: false
      });
      if (dom.edad.length > 0) {
        return utils.vLength(dom.edad, 2);
      }
    };
    return {
      init: function(oParams) {
        catchDom();
        return bindEvents();
      }
    };
  }), ["libs/plugins/jqNumeric.js"]);

  yOSON.AppCore.addModule("countchar", (function(Sb) {
    var st = {
      inpt: "#message",
      countchar: ".countChar"
    },
    dom = {},
    catchDom = function() {
      dom.inpt = $(st.inpt);
      dom.countchar = $(st.countchar);
    },
    bindEvents = function() {
      var $this,valor,
        len=160;
      dom.inpt.on("keypress",function(e){
        return (e.which!=13);
      });
      dom.inpt.on("keyup",function(e){
        $this=$(this);
        valor=$this.val();
        if(valor.length>len){
          $this.val(valor.substr(0,len));
        }
        countSet(valor.length);
      });
      dom.inpt.trigger("keyup");
    },
    countSet= function(len){
      var total= parseFloat(dom.countchar.attr("data-count")),
        result=total-len;
      if(result>=0){
        dom.countchar.html(result);
      }else{
        dom.countchar.html(0);
      }
    };
    return {
      init: function(oParams) {
        catchDom();
        bindEvents();
      }
    };
  }));

}).call(this);
